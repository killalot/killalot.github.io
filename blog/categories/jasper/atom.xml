<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Jasper | Ticnfae]]></title>
  <link href="www.ticnfae.co.uk/blog/categories/jasper/atom.xml" rel="self"/>
  <link href="www.ticnfae.co.uk/"/>
  <updated>2015-05-20T21:57:36+01:00</updated>
  <id>www.ticnfae.co.uk/</id>
  <author>
    <name><![CDATA[Peter Nicholson]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Combining Jasper Reports in a Spring Controller]]></title>
    <link href="www.ticnfae.co.uk/blog/2014/07/23/combining-jasper-reports-in-a-spring-controller"/>
    <updated>2014-07-23T20:37:51+01:00</updated>
    <id>www.ticnfae.co.uk/blog/2014/07/23/combining-jasper-reports-in-a-spring-controller</id>
    <content type="html"><![CDATA[<p>I have come across a scenario where I was required to combine multiple instances of the same Jasper report into a single pdf file. So here is a Spring controller that demonstrates this. I have also included a method for printing a single report as well so you can see the difference.</p>


<p><figure class='code'><figcaption><span> (CombineReportsController.java)</span> <a href='/downloads/code/combining-jasper-reports-in-a-spring-controller/CombineReportsController.java'>download</a></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="nd">@Controller</span>
</span><span class='line'><span class="kd">public</span> <span class="kd">class</span> <span class="nc">CombineReportsController</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>    <span class="nd">@Autowired</span>
</span><span class='line'>    <span class="kd">private</span> <span class="n">EntityDao</span> <span class="n">entityDao</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="nd">@RequestMapping</span><span class="o">(</span><span class="n">value</span><span class="o">=</span><span class="s">&quot;/print_selected&quot;</span><span class="o">,</span><span class="n">method</span><span class="o">=</span><span class="n">RequestMethod</span><span class="o">.</span><span class="na">GET</span><span class="o">)</span>
</span><span class='line'>    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">printSelected</span><span class="o">(</span><span class="nd">@RequestParam</span><span class="o">(</span><span class="s">&quot;ids[]&quot;</span><span class="o">)</span> <span class="n">Long</span><span class="o">[]</span> <span class="n">ids</span><span class="o">,</span><span class="n">HttpServletResponse</span> <span class="n">response</span><span class="o">)</span> <span class="kd">throws</span> <span class="n">JRException</span><span class="o">,</span> <span class="n">IOException</span><span class="o">{</span>
</span><span class='line'>        <span class="c1">// get the jrxml file from the class path</span>
</span><span class='line'>        <span class="n">URL</span> <span class="n">reportPath</span>  <span class="o">=</span> <span class="n">getClass</span><span class="o">().</span><span class="na">getResource</span><span class="o">(</span><span class="s">&quot;/jasper_reports/print_multiple.jrxml&quot;</span><span class="o">);</span>
</span><span class='line'>        <span class="n">List</span><span class="o">&lt;</span><span class="n">JasperPrint</span><span class="o">&gt;</span> <span class="n">jpList</span> <span class="o">=</span> <span class="k">new</span> <span class="n">ArrayList</span><span class="o">&lt;&gt;();</span>
</span><span class='line'>        <span class="c1">// gather any entities that need to be passed to jasper</span>
</span><span class='line'>        <span class="n">List</span><span class="o">&lt;</span><span class="n">Entity</span><span class="o">&gt;</span> <span class="n">entities</span> <span class="o">=</span> <span class="n">entityDao</span><span class="o">.</span><span class="na">printMultiple</span><span class="o">(</span><span class="n">ids</span><span class="o">);</span>
</span><span class='line'>        <span class="k">for</span><span class="o">(</span><span class="n">Entity</span> <span class="n">entity</span> <span class="o">:</span> <span class="n">entities</span><span class="o">){</span>
</span><span class='line'>            <span class="n">HashMap</span><span class="o">&lt;</span><span class="n">String</span><span class="o">,</span><span class="n">Object</span><span class="o">&gt;</span> <span class="n">params</span> <span class="o">=</span> <span class="k">new</span> <span class="n">HashMap</span><span class="o">&lt;&gt;();</span>
</span><span class='line'>            <span class="c1">// add entity and any other parameters</span>
</span><span class='line'>            <span class="n">params</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="s">&quot;entity&quot;</span><span class="o">,</span> <span class="n">entity</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>            <span class="c1">// create JasperReport for each entity instance</span>
</span><span class='line'>            <span class="n">JasperReport</span> <span class="n">jreport</span> <span class="o">=</span> <span class="n">JasperCompileManager</span><span class="o">.</span><span class="na">compileReport</span><span class="o">(</span><span class="n">reportPath</span><span class="o">.</span><span class="na">getPath</span><span class="o">());</span>
</span><span class='line'>            <span class="n">JasperPrint</span> <span class="n">jprint</span> <span class="o">=</span> <span class="n">JasperFillManager</span><span class="o">.</span><span class="na">fillReport</span><span class="o">(</span><span class="n">jreport</span><span class="o">,</span> <span class="n">params</span><span class="o">,</span> <span class="k">new</span> <span class="nf">JRBeanCollectionDataSource</span> <span class="o">(</span><span class="n">entity</span><span class="o">.</span><span class="na">getItems</span><span class="o">()));</span>
</span><span class='line'>
</span><span class='line'>            <span class="c1">// add report to list</span>
</span><span class='line'>            <span class="n">jpList</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">jprint</span><span class="o">);</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>        <span class="c1">// export reports using a single exporter and pass output stream of response object</span>
</span><span class='line'>        <span class="n">JRPdfExporter</span> <span class="n">exporter</span> <span class="o">=</span> <span class="k">new</span> <span class="nf">JRPdfExporter</span><span class="o">();</span>
</span><span class='line'>        <span class="n">exporter</span><span class="o">.</span><span class="na">setParameter</span><span class="o">(</span><span class="n">JRPdfExporterParameter</span><span class="o">.</span><span class="na">JASPER_PRINT_LIST</span><span class="o">,</span> <span class="n">jpList</span><span class="o">);</span>
</span><span class='line'>        <span class="n">exporter</span><span class="o">.</span><span class="na">setParameter</span><span class="o">(</span><span class="n">JRPdfExporterParameter</span><span class="o">.</span><span class="na">OUTPUT_STREAM</span><span class="o">,</span> <span class="n">response</span><span class="o">.</span><span class="na">getOutputStream</span><span class="o">());</span>
</span><span class='line'>        <span class="n">exporter</span><span class="o">.</span><span class="na">exportReport</span><span class="o">();</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="nd">@RequestMapping</span><span class="o">(</span><span class="n">value</span><span class="o">=</span><span class="s">&quot;/{id}/print&quot;</span><span class="o">)</span>
</span><span class='line'>    <span class="kd">public</span> <span class="n">ModelAndView</span> <span class="nf">printSingle</span><span class="o">(</span><span class="n">ModelMap</span> <span class="n">modelMap</span><span class="o">,</span> <span class="n">HttpServletRequest</span> <span class="n">request</span><span class="o">,</span><span class="nd">@PathVariable</span><span class="o">(</span><span class="s">&quot;id&quot;</span><span class="o">)</span> <span class="n">Long</span> <span class="n">id</span><span class="o">){</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">Entity</span> <span class="n">entity</span> <span class="o">=</span> <span class="n">entityDao</span><span class="o">.</span><span class="na">printSingle</span><span class="o">(</span><span class="n">id</span><span class="o">);</span>
</span><span class='line'>        <span class="n">JRDataSource</span> <span class="n">datasource</span> <span class="o">=</span> <span class="k">new</span> <span class="nf">JRBeanCollectionDataSource</span> <span class="o">(</span><span class="n">entity</span><span class="o">.</span><span class="na">getItems</span><span class="o">());</span>
</span><span class='line'>        <span class="n">modelMap</span><span class="o">.</span><span class="na">addAttribute</span><span class="o">(</span><span class="s">&quot;datasource&quot;</span><span class="o">,</span> <span class="n">datasource</span><span class="o">);</span>
</span><span class='line'>        <span class="n">modelMap</span><span class="o">.</span><span class="na">addAttribute</span><span class="o">(</span><span class="s">&quot;entity&quot;</span><span class="o">,</span> <span class="n">entity</span><span class="o">);</span>
</span><span class='line'>        <span class="n">modelMap</span><span class="o">.</span><span class="na">addAttribute</span><span class="o">(</span><span class="s">&quot;format&quot;</span><span class="o">,</span> <span class="s">&quot;pdf&quot;</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>        <span class="c1">// &quot;entityPrintSingle&quot; is the bean id, declared inside the jasper-views.xml</span>
</span><span class='line'>        <span class="k">return</span> <span class="k">new</span> <span class="nf">ModelAndView</span><span class="o">(</span><span class="s">&quot;entityPrintSingle&quot;</span><span class="o">,</span> <span class="n">modelMap</span><span class="o">);</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure></p>

<p>The main difference between the 2 methods is that in the printSingle() method, Spring exports the Jasper report itself using the returned ModelAndView object. However the printSelected() method is performing the export manually in order to provide the list of Jasper reports to the exporter.</p>




<h2>References</h2>


<ul>
    <li><a target="_blank" href="http://stackoverflow.com/questions/8564163/how-to-collate-multiple-jrxml-jasper-reports-into-a-one-single-pdf-output-file">Multiple jrxml reports into one file</a></li>
    <li><a target="_blank" href="http://krams915.blogspot.co.uk/2010/12/spring-3-mvc-dynamic-jasper-integration.html">Dynamic jasper integration</a></li>
    <li><a target="_blank" href="http://jasperreports.sourceforge.net/api/net/sf/jasperreports/engine/export/JRPdfExporter.html#exportReport%28%29">JRPdfExporter</a></li>
</ul>

]]></content>
  </entry>
  
</feed>
